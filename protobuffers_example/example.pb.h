/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_EXAMPLE_PB_H_INCLUDED
#define PB_EXAMPLE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SimpleMessage {
  pb_callback_t number;
} SimpleMessage;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SimpleMessage_init_default                                             \
  {                                                                            \
    { {NULL}, NULL }                                                           \
  }
#define SimpleMessage_init_zero                                                \
  {                                                                            \
    { {NULL}, NULL }                                                           \
  }

/* Field tags (for use in manual encoding/decoding) */
#define SimpleMessage_number_tag 1

/* Struct field encoding specification for nanopb */
#define SimpleMessage_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, INT32, number, 1)
#define SimpleMessage_CALLBACK pb_default_field_callback
#define SimpleMessage_DEFAULT NULL

extern const pb_msgdesc_t SimpleMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SimpleMessage_fields &SimpleMessage_msg

/* Maximum encoded size of messages (where known) */
/* SimpleMessage_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
